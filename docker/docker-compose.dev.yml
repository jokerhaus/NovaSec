# docker/docker-compose.dev.yml
# Development configuration for NovaSec

version: '3.8'

services:
  novasec-ingest:
    build:
      context: ..
      dockerfile: docker/Dockerfile.ingest
    volumes:
      - ../configs:/root/configs:ro
      - ../logs:/root/logs
    ports:
      - "8080:8080"
    depends_on:
      - nats
    restart: unless-stopped

  novasec-normalizer:
    build:
      context: ..
      dockerfile: docker/Dockerfile.normalizer
    volumes:
      - ../configs:/root/configs:ro
      - ../logs:/root/logs
    depends_on:
      - nats
      - clickhouse
    restart: unless-stopped

  novasec-correlator:
    build:
      context: ..
      dockerfile: docker/Dockerfile.correlator
    volumes:
      - ../configs:/root/configs:ro
      - ../logs:/root/logs
      - ../internal/rules:/root/internal/rules:ro
    depends_on:
      - nats
      - postgres
      - redis
    restart: unless-stopped

  novasec-alerting:
    build:
      context: ..
      dockerfile: docker/Dockerfile.alerting
    volumes:
      - ../configs:/root/configs:ro
      - ../logs:/root/logs
    depends_on:
      - nats
      - postgres
    restart: unless-stopped

  novasec-adminapi:
    build:
      context: ..
      dockerfile: docker/Dockerfile.adminapi
    volumes:
      - ../configs:/root/configs:ro
      - ../logs:/root/logs
    ports:
      - "8081:8080"
    depends_on:
      - postgres
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
    ports:
      - "9090:9090"
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-data:/var/lib/grafana
    ports:
      - "3000:3000"
    restart: unless-stopped

volumes:
  grafana-data:
